[{"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/index.js":"1","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/App.js":"2","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/reportWebVitals.js":"3","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/summary/index.js":"4","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/search/index.js":"5","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/login/index.js":"6","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/summary/index.js":"7","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/search/index.js":"8","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/nav/index.js":"9","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/loginform/index.js":"10","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/data/tickers.js":"11"},{"size":500,"mtime":1610144202173,"results":"12","hashOfConfig":"13"},{"size":884,"mtime":1610144202168,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610144202180,"results":"15","hashOfConfig":"13"},{"size":246,"mtime":1610144202179,"results":"16","hashOfConfig":"13"},{"size":243,"mtime":1610144202178,"results":"17","hashOfConfig":"13"},{"size":263,"mtime":1610148743129,"results":"18","hashOfConfig":"13"},{"size":947,"mtime":1610144202172,"results":"19","hashOfConfig":"13"},{"size":3162,"mtime":1610172298314,"results":"20","hashOfConfig":"13"},{"size":613,"mtime":1610148638387,"results":"21","hashOfConfig":"13"},{"size":3307,"mtime":1610148712781,"results":"22","hashOfConfig":"13"},{"size":533281,"mtime":1610161081824,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1n6guq5",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/index.js",[],["52","53"],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/App.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/reportWebVitals.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/summary/index.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/search/index.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/login/index.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/summary/index.js",["54","55"],"import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport TextField from '@material-ui/core/Textfield'\n\nexport default function Summary() {\n\n    // $.ajax\n    // \"GET\", \"https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/get-summary\"\n    // const apiKey = \"pk_6d98d58cbe5d41b8ae7aa4cd66d016a9\"\n\n    return (\n        <Container>\n            <form>\n                <Grid container spacing={6}>\n                    <Grid item >\n                        <input placeholder = \"Value\"/>\n                    </Grid>\n                    <Grid item >\n                        <input placeholder = \"Start Date\"/>\n                    </Grid>\n                    <Grid item >\n                        <input placeholder = \"End Date\"/>\n                    </Grid>\n                </Grid>\n            </form>\n        </Container>\n    )\n}","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/search/index.js",["56","57"],"import React, { useState } from 'react'\nimport TickerSymbols from \"../../data/tickers\"\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { matchSorter } from 'match-sorter';\nimport { useForm } from 'react-hook-form';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    input: {\n        margin: theme.spacing(2)\n    }\n}));\n\n//Necessary for fuzzy matching with match-sorter\nconst filterOptions = (options, { inputValue }) =>\n    matchSorter(options, inputValue);\n\nexport default function Search() {\n    const classes = useStyles();\n    const [tickerOptions, setTickerOptions] = useState([])\n\n    const { handleSubmit, register } = useForm();\n    const onSubmit = handleSubmit((data) => {\n        //get rid of hyphen and isolate ticker symbol in string\n        if (data.ticker.indexOf(\"-\") !== -1) {\n            var array = data.ticker.split(\"-\");\n            data.ticker = array[0].trim().toLowerCase();\n        }\n    });\n\n    const handleChange = async (value) => {\n        if (value) {\n            try {\n                const response = await axios.get(\n                    `https://ticker-2e1ica8b9.now.sh/keyword/${value}`\n                );\n                console.log(response)\n                setTickerOptions(response.data)\n            } catch (error) {\n                console.log(\"autocomplete not working at the moment\")\n            }\n        }\n\n    }\n\n\n\n\n    return (\n        <div>\n\n            <Grid container justify=\"center\">\n\n                <Grid item xs={6} >\n                    <Card>\n                        <form onSubmit={onSubmit}>\n                            <Autocomplete\n                                //filter option used for fuzzy matching with match-sorter, see MU docs on autocomplete\n                                type=\"submit\"\n                                filterOptions={filterOptions}\n                                id=\"free-solo-demo\"\n                                freeSolo\n                                className={classes.input}\n                                onInputChange={(event, newInputValue) => {\n                                    handleChange(newInputValue)\n                                }}\n                                options={tickerOptions.map((option) => `${option.symbol}  -  ${option.name.length < 35 ? option.name : option.name.substring(0, 35) + \"...\"}`)}\n\n                                renderInput={(params) => (\n                                    <TextField {...params}\n                                        label=\"Search TickerSymbol\"\n                                        inputRef={register}\n                                        name=\"ticker\"\n                                        variant=\"outlined\" />\n                                )}\n                            />\n                        </form>\n                    </Card>\n\n\n                </Grid>\n\n\n            </Grid>\n\n\n        </div>\n    )\n}\n","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/nav/index.js",["58"],"import React from \"react\"\n\n\nexport default function Nav() {\n  return(\n    <nav>\n    <div className=\"nav-wrapper\">\n      <a href=\"#\" className=\"brand-logo blueText\" id = \"portfolio\">Portfolio</a>\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n        <li><a href=\"/search\">Search</a></li>\n        <li><a href=\"/portfolio\">My portfolio</a></li>\n        <li id = \"userInfo\">\n            {/* <img id = \"userAvatar\" className = \"circle\" src =\"\" alt = \"\"/>  */}\n            <div id = \"userAvatar\" className = \"circle\" ></div>\n            John Smith\n        </li>\n      </ul>\n    </div>\n  </nav>\n  )\n}","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/loginform/index.js",["59"],"import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport TextField from '@material-ui/core/Textfield'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding:theme.spacing(3)\n    },\n\n    input:{\n        borderBottom: \"none\",\n \n    },\n\n    paper: {\n        padding:theme.spacing(3)\n    }\n}));\n\nexport default function LoginForm() {\n\n    const classes = useStyles();\n    const { handleSubmit, register } = useForm();\n    const onSubmit = handleSubmit((data) => {\n        console.log(data);\n    });\n\n    return (\n        <Container maxWidth=\"xs\" className={classes.container}>\n            <Paper className={classes.paper}>\n                <form onSubmit={onSubmit}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} >\n                            <Grid container spacing={2} >\n                                <Grid item xs={12}>\n                                    <Typography>\n                                        Welcome to Our App!\n                             </Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        // className={classes.input}\n                                        fullWidth label=\"Email\"\n                                        inputRef={register}\n                                        name=\"email\"\n                                        size=\"small\"\n                                        variant=\"outlined\" />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                      className={classes.input}\n                                        fullWidth\n                                        inputRef={register}\n                                        label=\"Password\"\n                                        name=\"password\"\n                                        size=\"small\"\n                                        type=\"password\"\n                                        variant=\"outlined\" />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item container spacing={2} xs={12}>\n                        <Grid item xs={12}>\n                            <Button fullWidth type=\"submit\" variant=\"contained\" color=\"primary\">\n                                Login\n                        </Button>\n\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button fullWidth variant=\"contained\" color=\"primary\">\n                                Sign Up\n                        </Button>\n\n                        </Grid>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n\n        </Container >\n    )\n}\n","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/data/tickers.js",[],["60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":18},{"ruleId":"66","severity":1,"message":"70","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":17},{"ruleId":"66","severity":1,"message":"71","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":21},{"ruleId":"66","severity":1,"message":"72","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":11},{"ruleId":"73","severity":1,"message":"74","line":8,"column":7,"nodeType":"75","endLine":8,"endColumn":68},{"ruleId":"66","severity":1,"message":"76","line":7,"column":8,"nodeType":"68","messageId":"69","endLine":7,"endColumn":24},{"ruleId":"62","replacedBy":"77"},{"ruleId":"64","replacedBy":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'TickerSymbols' is defined but never used.","'Box' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'CircularProgress' is defined but never used.",["79"],["80"],"no-global-assign","no-unsafe-negation"]