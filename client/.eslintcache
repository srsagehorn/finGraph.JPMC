[{"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/index.js":"1","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/reportWebVitals.js":"2","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/App.js":"3","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/contexts/StockInfoContext.js":"4","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/firebase/userContext.js":"5","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/search/index.js":"6","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/nav/index.js":"7","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/summary/index.js":"8","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/portfolio/index.js":"9","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/login/index.js":"10","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/firebase/index.js":"11","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/reducers/stockInfoReducer.js":"12","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/themes/theme.js":"13","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/PortfolioTable/index.js":"14","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/loginform/index.js":"15","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/utilities/StringFormatter.js":"16","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/Search/index.js":"17","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/StockInfo/index.js":"18","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/StockButton/index.js":"19"},{"size":500,"mtime":1610646844888,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1610646844941,"results":"22","hashOfConfig":"21"},{"size":1183,"mtime":1610661297121,"results":"23","hashOfConfig":"21"},{"size":621,"mtime":1610650035483,"results":"24","hashOfConfig":"21"},{"size":539,"mtime":1610646844883,"results":"25","hashOfConfig":"21"},{"size":2501,"mtime":1610663650821,"results":"26","hashOfConfig":"21"},{"size":1580,"mtime":1610661925125,"results":"27","hashOfConfig":"21"},{"size":208,"mtime":1610661297129,"results":"28","hashOfConfig":"21"},{"size":366,"mtime":1610661297128,"results":"29","hashOfConfig":"21"},{"size":200,"mtime":1610661297128,"results":"30","hashOfConfig":"21"},{"size":490,"mtime":1610646844882,"results":"31","hashOfConfig":"21"},{"size":776,"mtime":1610653303585,"results":"32","hashOfConfig":"21"},{"size":586,"mtime":1610646844945,"results":"33","hashOfConfig":"21"},{"size":18731,"mtime":1610646844878,"results":"34","hashOfConfig":"21"},{"size":5586,"mtime":1610661297126,"results":"35","hashOfConfig":"21"},{"size":269,"mtime":1610646844946,"results":"36","hashOfConfig":"21"},{"size":5151,"mtime":1610660633008,"results":"37","hashOfConfig":"21"},{"size":4430,"mtime":1610661009119,"results":"38","hashOfConfig":"21"},{"size":3621,"mtime":1610663425483,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n6guq5",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/index.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/reportWebVitals.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/App.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/contexts/StockInfoContext.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/firebase/userContext.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/search/index.js",["81","82"],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/nav/index.js",["83","84","85","86","87"],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/summary/index.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/portfolio/index.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/pages/login/index.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/firebase/index.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/reducers/stockInfoReducer.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/themes/theme.js",["88","89","90"],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/PortfolioTable/index.js",["91","92"],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/loginform/index.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/utilities/StringFormatter.js",[],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/Search/index.js",["93"],"import React, { useState, useContext } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { matchSorter } from 'match-sorter';\nimport { useForm } from 'react-hook-form';\nimport {StockInfoContext} from '../../contexts/StockInfoContext'\n\n//Material UI built in way of custom styling\nconst useStyles = makeStyles((theme) => ({\n    input: {\n        margin: theme.spacing(2)\n    },\n    option: {\n        backgroundColor: theme.palette.background.default, \n        \"&:hover\": {\n            backgroundColor: theme.palette.action.selected\n          }\n      },\n\n    \n}));\n\n//Necessary for fuzzy matching with match-sorter\nconst filterOptions = (options, { inputValue }) =>\n    matchSorter(options, inputValue);\n\nexport default function Search() {\n    const classes = useStyles();\n    //autcomplete search ticker options\n    const [tickerOptions, setTickerOptions] = useState([])\n    //React-Hook-Form\n    const { handleSubmit, register } = useForm();\n\n    const [stockInfo, dispatchStockInfo] = useContext(StockInfoContext)\n\n    const onSubmit = handleSubmit(async (data) => {\n        //get rid of hyphen and isolate ticker symbol in string\n        if (data.symbol.indexOf(\"-\") !== -1) {\n            var array = data.symbol.split(\"-\");\n            data.symbol = array[0].trim().toLowerCase();\n        }\n        dispatchStockInfo({type:'API_FETCH_INIT'})\n       \n\n        try{\n            const stockSummary = await axios.get(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${data.symbol}&apikey=${process.env.REACT_APP_ALPHA_VANTAGE_API_KEY}`);\n            await console.log(`test ${stockSummary}`)\n\n            const targetPrice = await axios.get(`https://finnhub.io/api/v1/stock/price-target?symbol=${data.symbol}&token=${process.env.REACT_APP_FINNHUB_API_KEY}`);\n            await console.log(targetPrice)\n\n            const stockPrice = await axios.get(`https://finnhub.io/api/v1/stock/price-target?symbol=${data.symbol}&token=${process.env.REACT_APP_FINNHUB_API_KEY}`);\n            await console.log(stockPrice)\n\n            await setTimeout(function(){\n                dispatchStockInfo(\n                    {type:'API_FETCH_SUCCESS',\n                    payload:{\n                        targetPrice: {\n                            ...targetPrice.data\n                        },\n                        stockSummary:{\n                            ...stockSummary.data\n                        }, \n                    }\n                }\n            )\n           }, 2000)\n\n        } catch(error){\n            console.log(\"error fetching stock data\") \n            dispatchStockInfo({type:'API_FETCH_FAILURE'})\n        }\n\n    });\n\n    const handleChange = async (value) => {\n        if (value) {\n            try {\n                const response = await axios.get(\n                    //List of Tickers(2019) https://github.com/yashwanth2804/TickerSymbol\n                    `https://ticker-2e1ica8b9.now.sh/keyword/${value}`\n                );\n                console.log(response)\n                setTickerOptions(response.data)\n            } catch (error) {\n                console.log(\"autocomplete not working at the moment\")\n            }\n        }\n\n    }\n\n\n    return (\n        <div>\n\n            <Grid container justify=\"center\">\n                <Grid item xs={6} >\n                    <Card>\n                        <form onSubmit={onSubmit}>\n                            <Autocomplete\n                    classes={{\n                        option: classes.option, \n                       \n                    }}\n                                type=\"submit\"\n                                //filter option used for fuzzy matching with match-sorter, see MU docs on autocomplete\n                                filterOptions={filterOptions}\n                                id=\"ticker-symbol-request\"\n                                freeSolo\n                                className={classes.input}\n                                onInputChange={(event, newInputValue) => {\n                                    handleChange(newInputValue)\n                                }}\n                                options={tickerOptions.map((option) => `${option.symbol}  -  ${option.name.length < 35 ? option.name : option.name.substring(0, 35) + \"...\"}`)}\n                                \n                                renderInput={(params) => (\n                                    <TextField {...params}\n                                        label=\"Search Ticker Symbol\"\n                                        inputRef={register}\n                                        name=\"symbol\"\n                                        size={\"medium\"}\n                                        variant=\"outlined\" />\n                                )}\n                            />\n                        </form>\n                    </Card>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n",["94","95"],"/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/StockInfo/index.js",["96","97","98","99"],"import React, { useState, useContext } from 'react'\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { StockInfoContext } from '../../contexts/StockInfoContext'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nconst useStyles = makeStyles((theme) => ({\n    darkCardBackground:{\n        // backgroundColor:\"rgb(50,50,50)\",\n        padding:\"1rem\"\n    },\n    statsCard:{\n       backgroundColor:\"rgb(50,50,50)\",\n    }\n}));\n\nexport default function StockInfo() {    \n    const classes = useStyles();\n    const [stockInfo, dispatchStockInfo] = useContext(StockInfoContext)\n    return (\n        <Box m={1}>\n\n            <Grid container spacing={4}>\n                {/* <Grid item sm={12}>\n                    <Card>\n                        <CardContent>\n                            <Typography>\n                                Stock Chart\n                    </Typography>\n                        </CardContent>\n                    </Card>\n\n                </Grid> */}\n                <Grid item container spacing={3} justify=\"center\" alignItems=\"stretch\" sm={12}>\n\n\n                    <Grid item sm={6} >\n                        <Card className={classes.darkCardBackground} >\n\n\n\n                            {stockInfo.targetPrice ?\n                                <Grid container spacing ={3}>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"h4\" align=\"center\">\n                                            {stockInfo.stockSummary.Name}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item className={classes.darkCardBackground}>\n                                    <Card className={classes.statsCard}>\n                                        <CardContent>\n                                        {`Last Updated: ${stockInfo.targetPrice.lastUpdated}`}\n                                        </CardContent>\n                                    </Card>\n\n                                    </Grid>\n                                    <Grid item>\n                                    <Card className={classes.statsCard}>\n                                    <CardContent>\n                                        {`symbol: ${stockInfo.targetPrice.symbol}`}\n                                        </CardContent>\n                                    </Card>\n                                    </Grid>\n                                    <Grid item>\n                                    <Card className={classes.statsCard}>\n                                    <CardContent>\n                                        {`Target High: ${stockInfo.targetPrice.targetHigh}`}\n                                        </CardContent>\n                                    </Card>\n                                    </Grid>\n                                    <Grid item>\n                                    <Card className={classes.statsCard}>\n                                    <CardContent>\n                                        {`Target Low: ${stockInfo.targetPrice.targetLow}`}\n                                        </CardContent>\n                                    </Card>\n\n                                    </Grid>\n                                </Grid>\n\n                                : <Typography>\"No Description Available\"</Typography>}\n\n\n                        </Card>\n                    </Grid>\n                    <Grid item sm={6}>\n                        <Card>\n                      \n                            <CardContent>\n                                <Typography>\n                                    {/* if there is stock info and a stock summary then show the stock summary description */}\n\n                                    {stockInfo.stockSummary.Description ? stockInfo.stockSummary.Description : \"No Description Available\"}\n\n                                </Typography>\n                            </CardContent>\n\n                        </Card>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}\n","/Users/matiastong/Documents/repos/finGraph.JPMC/client/src/components/StockButton/index.js",["100","101","102","103","104","105","106"],{"ruleId":"107","severity":1,"message":"108","line":12,"column":8,"nodeType":"109","messageId":"110","endLine":12,"endColumn":19},{"ruleId":"107","severity":1,"message":"111","line":27,"column":23,"nodeType":"109","messageId":"110","endLine":27,"endColumn":40},{"ruleId":"107","severity":1,"message":"112","line":11,"column":16,"nodeType":"109","messageId":"110","endLine":11,"endColumn":23},{"ruleId":"113","severity":1,"message":"114","line":30,"column":7,"nodeType":"115","endLine":30,"endColumn":35},{"ruleId":"116","severity":1,"message":"117","line":41,"column":51,"nodeType":"115","endLine":41,"endColumn":65},{"ruleId":"107","severity":1,"message":"118","line":50,"column":10,"nodeType":"109","messageId":"110","endLine":50,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":52,"column":18,"nodeType":"115","endLine":52,"endColumn":73},{"ruleId":"107","severity":1,"message":"121","line":1,"column":26,"nodeType":"109","messageId":"110","endLine":1,"endColumn":34},{"ruleId":"107","severity":1,"message":"122","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"107","severity":1,"message":"123","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":13},{"ruleId":"107","severity":1,"message":"124","line":21,"column":8,"nodeType":"109","messageId":"110","endLine":21,"endColumn":22},{"ruleId":"107","severity":1,"message":"125","line":281,"column":19,"nodeType":"109","messageId":"110","endLine":281,"endColumn":27},{"ruleId":"107","severity":1,"message":"126","line":38,"column":12,"nodeType":"109","messageId":"110","endLine":38,"endColumn":21},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"107","severity":1,"message":"131","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"132","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":17},{"ruleId":"107","severity":1,"message":"133","line":10,"column":8,"nodeType":"109","messageId":"110","endLine":10,"endColumn":18},{"ruleId":"107","severity":1,"message":"111","line":24,"column":23,"nodeType":"109","messageId":"110","endLine":24,"endColumn":40},{"ruleId":"107","severity":1,"message":"134","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":13},{"ruleId":"107","severity":1,"message":"135","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":12},{"ruleId":"107","severity":1,"message":"136","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":11},{"ruleId":"107","severity":1,"message":"108","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":19},{"ruleId":"107","severity":1,"message":"137","line":25,"column":11,"nodeType":"109","messageId":"110","endLine":25,"endColumn":18},{"ruleId":"107","severity":1,"message":"111","line":27,"column":23,"nodeType":"109","messageId":"110","endLine":27,"endColumn":40},{"ruleId":"107","severity":1,"message":"138","line":50,"column":15,"nodeType":"109","messageId":"110","endLine":50,"endColumn":23},"no-unused-vars","'CardContent' is defined but never used.","Identifier","unusedVar","'dispatchStockInfo' is assigned a value but never used.","'setUser' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'SignOut' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'rgbToHex' is defined but never used.","'purple' is defined but never used.","'green' is defined but never used.","'FilterListIcon' is defined but never used.","'setDense' is assigned a value but never used.","'stockInfo' is assigned a value but never used.","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"'useState' is defined but never used.","'CardMedia' is defined but never used.","'CardHeader' is defined but never used.","'Paper' is defined but never used.","'Card' is defined but never used.","'Box' is defined but never used.","'classes' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]